a:6:{s:9:"classesIn";a:0:{}s:8:"traitsIn";a:1:{s:29:"BlastCloud\Chassis\Assertions";a:6:{s:4:"name";s:10:"Assertions";s:14:"namespacedName";s:29:"BlastCloud\Chassis\Assertions";s:9:"namespace";s:18:"BlastCloud\Chassis";s:9:"startLine";i:7;s:7:"endLine";i:223;s:7:"methods";a:16:{s:11:"__construct";a:6:{s:10:"methodName";s:11:"__construct";s:9:"signature";s:53:"__construct(PHPUnit\Framework\TestCase $testInstance)";s:10:"visibility";s:6:"public";s:9:"startLine";i:11;s:7:"endLine";i:12;s:3:"ccn";i:1;}s:9:"increment";a:6:{s:10:"methodName";s:9:"increment";s:9:"signature";s:17:"increment(): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:14;s:7:"endLine";i:17;s:3:"ccn";i:1;}s:15:"assertNoHistory";a:6:{s:10:"methodName";s:15:"assertNoHistory";s:9:"signature";s:39:"assertNoHistory(?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:22;s:7:"endLine";i:28;s:3:"ccn";i:1;}s:18:"assertHistoryCount";a:6:{s:10:"methodName";s:18:"assertHistoryCount";s:9:"signature";s:54:"assertHistoryCount(int $count, ?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:33;s:7:"endLine";i:41;s:3:"ccn";i:2;}s:17:"findOrFailIndexes";a:6:{s:10:"methodName";s:17:"findOrFailIndexes";s:9:"signature";s:40:"findOrFailIndexes(array $indexes): array";s:10:"visibility";s:9:"protected";s:9:"startLine";i:46;s:7:"endLine";i:55;s:3:"ccn";i:2;}s:10:"runClosure";a:6:{s:10:"methodName";s:10:"runClosure";s:9:"signature";s:61:"runClosure(array $history, Closure $closure, mixed $e): mixed";s:10:"visibility";s:9:"protected";s:9:"startLine";i:60;s:7:"endLine";i:67;s:3:"ccn";i:1;}s:6:"assert";a:6:{s:10:"methodName";s:6:"assert";s:9:"signature";s:41:"assert(bool $test, string $message): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:73;s:7:"endLine";i:80;s:3:"ccn";i:2;}s:11:"assertFirst";a:6:{s:10:"methodName";s:11:"assertFirst";s:9:"signature";s:53:"assertFirst(Closure $closure, ?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:86;s:7:"endLine";i:98;s:3:"ccn";i:1;}s:14:"assertNotFirst";a:6:{s:10:"methodName";s:14:"assertNotFirst";s:9:"signature";s:56:"assertNotFirst(Closure $closure, ?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:105;s:7:"endLine";i:117;s:3:"ccn";i:1;}s:7:"getLast";a:6:{s:10:"methodName";s:7:"getLast";s:9:"signature";s:9:"getLast()";s:10:"visibility";s:9:"protected";s:9:"startLine";i:119;s:7:"endLine";i:122;s:3:"ccn";i:1;}s:10:"assertLast";a:6:{s:10:"methodName";s:10:"assertLast";s:9:"signature";s:52:"assertLast(Closure $closure, ?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:127;s:7:"endLine";i:139;s:3:"ccn";i:1;}s:13:"assertNotLast";a:6:{s:10:"methodName";s:13:"assertNotLast";s:9:"signature";s:55:"assertNotLast(Closure $closure, ?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:144;s:7:"endLine";i:156;s:3:"ccn";i:1;}s:9:"assertAll";a:6:{s:10:"methodName";s:9:"assertAll";s:9:"signature";s:43:"assertAll(Closure $closure, $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:162;s:7:"endLine";i:169;s:3:"ccn";i:2;}s:13:"assertIndexes";a:6:{s:10:"methodName";s:13:"assertIndexes";s:9:"signature";s:71:"assertIndexes(array $indexes, Closure $closure, ?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:176;s:7:"endLine";i:190;s:3:"ccn";i:1;}s:16:"assertNotIndexes";a:6:{s:10:"methodName";s:16:"assertNotIndexes";s:9:"signature";s:74:"assertNotIndexes(array $indexes, Closure $closure, ?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:197;s:7:"endLine";i:212;s:3:"ccn";i:1;}s:10:"assertNone";a:6:{s:10:"methodName";s:10:"assertNone";s:9:"signature";s:44:"assertNone(Closure $closure, $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:219;s:7:"endLine";i:222;s:3:"ccn";i:1;}}}}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:223;s:18:"commentLinesOfCode";i:50;s:21:"nonCommentLinesOfCode";i:173;}s:15:"ignoredLinesFor";a:1:{i:0;i:7;}s:17:"executableLinesIn";a:85:{i:12;i:2;i:16;i:3;i:24;i:4;i:25;i:4;i:26;i:4;i:27;i:4;i:35;i:5;i:37;i:6;i:38;i:6;i:39;i:6;i:40;i:6;i:48;i:7;i:54;i:7;i:49;i:8;i:50;i:9;i:53;i:10;i:62;i:11;i:64;i:12;i:66;i:12;i:65;i:13;i:75;i:14;i:76;i:15;i:79;i:16;i:88;i:17;i:89;i:17;i:90;i:17;i:91;i:17;i:92;i:17;i:94;i:18;i:95;i:18;i:96;i:18;i:97;i:18;i:107;i:19;i:108;i:19;i:109;i:19;i:110;i:19;i:111;i:19;i:113;i:20;i:114;i:20;i:115;i:20;i:116;i:20;i:121;i:21;i:129;i:22;i:130;i:22;i:131;i:22;i:132;i:22;i:133;i:22;i:135;i:23;i:136;i:23;i:137;i:23;i:138;i:23;i:146;i:24;i:147;i:24;i:148;i:24;i:149;i:24;i:150;i:24;i:152;i:25;i:153;i:25;i:154;i:25;i:155;i:25;i:164;i:26;i:165;i:27;i:168;i:28;i:178;i:29;i:179;i:29;i:180;i:29;i:181;i:29;i:182;i:29;i:184;i:30;i:186;i:31;i:187;i:31;i:188;i:31;i:189;i:31;i:199;i:32;i:200;i:32;i:201;i:32;i:202;i:32;i:203;i:32;i:205;i:33;i:207;i:34;i:208;i:34;i:209;i:34;i:210;i:34;i:211;i:34;i:221;i:36;}}