a:6:{s:9:"classesIn";a:0:{}s:8:"traitsIn";a:1:{s:29:"BlastCloud\Chassis\Assertions";a:6:{s:4:"name";s:10:"Assertions";s:14:"namespacedName";s:29:"BlastCloud\Chassis\Assertions";s:9:"namespace";s:18:"BlastCloud\Chassis";s:9:"startLine";i:7;s:7:"endLine";i:222;s:7:"methods";a:15:{s:9:"increment";a:6:{s:10:"methodName";s:9:"increment";s:9:"signature";s:17:"increment(): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:13;s:7:"endLine";i:16;s:3:"ccn";i:1;}s:15:"assertNoHistory";a:6:{s:10:"methodName";s:15:"assertNoHistory";s:9:"signature";s:39:"assertNoHistory(?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:21;s:7:"endLine";i:27;s:3:"ccn";i:1;}s:18:"assertHistoryCount";a:6:{s:10:"methodName";s:18:"assertHistoryCount";s:9:"signature";s:54:"assertHistoryCount(int $count, ?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:32;s:7:"endLine";i:40;s:3:"ccn";i:2;}s:17:"findOrFailIndexes";a:6:{s:10:"methodName";s:17:"findOrFailIndexes";s:9:"signature";s:40:"findOrFailIndexes(array $indexes): array";s:10:"visibility";s:9:"protected";s:9:"startLine";i:45;s:7:"endLine";i:54;s:3:"ccn";i:2;}s:10:"runClosure";a:6:{s:10:"methodName";s:10:"runClosure";s:9:"signature";s:61:"runClosure(array $history, Closure $closure, mixed $e): mixed";s:10:"visibility";s:9:"protected";s:9:"startLine";i:59;s:7:"endLine";i:66;s:3:"ccn";i:1;}s:6:"assert";a:6:{s:10:"methodName";s:6:"assert";s:9:"signature";s:41:"assert(bool $test, string $message): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:72;s:7:"endLine";i:79;s:3:"ccn";i:2;}s:11:"assertFirst";a:6:{s:10:"methodName";s:11:"assertFirst";s:9:"signature";s:53:"assertFirst(Closure $closure, ?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:85;s:7:"endLine";i:97;s:3:"ccn";i:1;}s:14:"assertNotFirst";a:6:{s:10:"methodName";s:14:"assertNotFirst";s:9:"signature";s:56:"assertNotFirst(Closure $closure, ?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:104;s:7:"endLine";i:116;s:3:"ccn";i:1;}s:7:"getLast";a:6:{s:10:"methodName";s:7:"getLast";s:9:"signature";s:9:"getLast()";s:10:"visibility";s:9:"protected";s:9:"startLine";i:118;s:7:"endLine";i:121;s:3:"ccn";i:1;}s:10:"assertLast";a:6:{s:10:"methodName";s:10:"assertLast";s:9:"signature";s:52:"assertLast(Closure $closure, ?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:126;s:7:"endLine";i:138;s:3:"ccn";i:1;}s:13:"assertNotLast";a:6:{s:10:"methodName";s:13:"assertNotLast";s:9:"signature";s:55:"assertNotLast(Closure $closure, ?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:143;s:7:"endLine";i:155;s:3:"ccn";i:1;}s:9:"assertAll";a:6:{s:10:"methodName";s:9:"assertAll";s:9:"signature";s:43:"assertAll(Closure $closure, $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:161;s:7:"endLine";i:168;s:3:"ccn";i:2;}s:13:"assertIndexes";a:6:{s:10:"methodName";s:13:"assertIndexes";s:9:"signature";s:71:"assertIndexes(array $indexes, Closure $closure, ?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:175;s:7:"endLine";i:189;s:3:"ccn";i:1;}s:16:"assertNotIndexes";a:6:{s:10:"methodName";s:16:"assertNotIndexes";s:9:"signature";s:74:"assertNotIndexes(array $indexes, Closure $closure, ?string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:196;s:7:"endLine";i:211;s:3:"ccn";i:1;}s:10:"assertNone";a:6:{s:10:"methodName";s:10:"assertNone";s:9:"signature";s:44:"assertNone(Closure $closure, $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:218;s:7:"endLine";i:221;s:3:"ccn";i:1;}}}}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:222;s:18:"commentLinesOfCode";i:50;s:21:"nonCommentLinesOfCode";i:172;}s:15:"ignoredLinesFor";a:1:{i:0;i:7;}s:17:"executableLinesIn";a:84:{i:15;i:3;i:23;i:4;i:24;i:4;i:25;i:4;i:26;i:4;i:34;i:5;i:36;i:6;i:37;i:6;i:38;i:6;i:39;i:6;i:47;i:7;i:53;i:7;i:48;i:8;i:49;i:9;i:52;i:10;i:61;i:11;i:63;i:12;i:65;i:12;i:64;i:13;i:74;i:14;i:75;i:15;i:78;i:16;i:87;i:17;i:88;i:17;i:89;i:17;i:90;i:17;i:91;i:17;i:93;i:18;i:94;i:18;i:95;i:18;i:96;i:18;i:106;i:19;i:107;i:19;i:108;i:19;i:109;i:19;i:110;i:19;i:112;i:20;i:113;i:20;i:114;i:20;i:115;i:20;i:120;i:21;i:128;i:22;i:129;i:22;i:130;i:22;i:131;i:22;i:132;i:22;i:134;i:23;i:135;i:23;i:136;i:23;i:137;i:23;i:145;i:24;i:146;i:24;i:147;i:24;i:148;i:24;i:149;i:24;i:151;i:25;i:152;i:25;i:153;i:25;i:154;i:25;i:163;i:26;i:164;i:27;i:167;i:28;i:177;i:29;i:178;i:29;i:179;i:29;i:180;i:29;i:181;i:29;i:183;i:30;i:185;i:31;i:186;i:31;i:187;i:31;i:188;i:31;i:198;i:32;i:199;i:32;i:200;i:32;i:201;i:32;i:202;i:32;i:204;i:33;i:206;i:34;i:207;i:34;i:208;i:34;i:209;i:34;i:210;i:34;i:220;i:36;}}